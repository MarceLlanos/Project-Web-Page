.paragraph{
	margin: 0 0 10px;
}

.box{
	&-left{
		float: left;
	}
	&-right{
		float: right;
	}
}
@for $i from 1 through 50{
	@if($i%5 == 0){
		$m: pixels($i);
		.mb-#{$i}{
			@include margin($i, bottom);
		}
	}
}

.no-padding{
	padding: 0 !important;
	padding-bottom: 0;
	padding-top: 0;
	padding-right: 0;
	padding-left: 0;
}

.no-padding-bottom{
	padding-bottom: 0 !important;
}

.no-padding-top{
	padding-top: 0 !important;
}
.no-padding-left{
	padding-left: 0 !important;
}
.no-padding-right{
	padding-right: 0 !important;
}

.no-margin{
	margin: 0 !important;
	&-left{
		margin-left: 0 !important;
	}
	&-right{
		margin-right: 0 !important;
	}
	&-top{
		margin-top: 0 !important;
	}
	&-bottom{
		margin-bottom: 0 !important;
	}
}

.pull{
	&-sm-right{
		@include mq($from: tablet){
			float: right;
		}
	}
	&-md-right{
		@include mq($from: desktop){
			float: right;
		}
	}
	&-lg-right{
		@include mq($from: wide){
			float: right;
		}
	}
}

@each $bpName, $bp in $bootstrapBreakpoints {
	.overfloat-#{$bpName}{
		@if ($bpName == xs){
			@include mq($until: 768px){
				margin-left: -15px !important;
				margin-right: -15px !important;
			}
		}
		@else{
			@include mq($from: $bp){
				margin-left: -15px !important;
				margin-right: -15px !important;
			}
		}
	}
}

.elem-to-bg{
	background-repeat: no-repeat;
	background-size: cover;
	background-position: center center;

	@for  $i from 1 to $grid-columns{
		&--#{$i}{
			background-size: ( $i*100%/$grid-columns);
			background-position-x: left;
		}
	}
	&--left{
		background-position-x: left;
	}
	&--right{
		background-position-x: right;
	}
}

.img-to-bg{
	display: none !important;
}

.bg-img-expand{
	@include mq($until: tablet){
		min-height: 300px;
	}
	&_bg{
		background-repeat: no-repeat;
		background-size: cover;
		background-position: center center;
		position: absolute;
		height: 100%;
		z-index: -1;
		&--left{
			right: 0;
		} 
		&--right{
			left: 0;
		}
	}
}

.img-reponsive{
	@include img-responsive();
}

.img-adaptative{
	@include img-responsive();
}

.img-center{
	@include center-block();
}

.table{
	&_block{
		display: table;
		height: 100%;
		width: 100%;
		& &_content{
			display: table-cell;
		}
	}

	@each $bpName, $bp in $bootstrapBreakpoints{
		&-#{$bpName}-_block{
			@if($bpName == xs){
				@include mq($until: tablet){
					display: table;
					height: 100%;
					width: 100%;
					.table-block_content{
						display: table-cell;
					}
				}
			}
			@else {
				@include mq($from: $bp){
					display: table;
					height: 100%;
					width: 100%;
					.table-block_content{
						display: table-cell;
					}
				}
			}
		}
	}
	&-block--center{
		.table-block_content{
			vertical-align: middle;
		}
	}
	&-block--bottom{
		.table-block_content{
			vertical-align: bottom;
		}
	}
}
 
.height-full{
	height: 100%;
}

.video-wrapped{
	position: relative;
	padding-bottom: 56.25%;
	padding-top: 25px;
	height: 0;
}

.video-wrapped iframe{
	position: absolute;
	top: 0;
	bottom: 0;
	width: 100%;
	height: 100%;
}

.elem-center{
	@include center-block();
}

.ir{
	background-color: transparent;
	border: 0;
	overfloat: hidden;
	*text-indent: -9999px;
}

.ir:before{
	content: "";
	display: block;
	width: 0;
	height: 150%;
}

.clearfix:before,
.clearfix:after{
	content: "";
	display: table;
}

.clearfix:after {
	clear: both;
}


/*
 * For IE 6/7 only
 * Include this rule to trigger hasLayout and contain floats.
 */

.clearfix {
	*zoom: 1;
}

.dots {
	margin-left: 0;
	@include mq($until: tablet) {
		margin-left: 20px;
	}
	display: block;
	&--light {
		li {
			padding-left: 20px;
			position: relative;
			@include mq($until: tablet) {
				margin-left: 20px;
			}
			&:before {
				content: "";
				background-color: rgba(get-color(gray), 0.2);
				position: absolute;
				margin: 7px 0;
				left: 0;
				top: 0;
			}
		}
	}
	li {
		padding-left: 20px;
		position: relative;
		&:before {
			content: "";
			background-color: red;
			position: absolute;
			margin: 7px 0;
			left: 0;
			top: 0;
		}
	}
}


















